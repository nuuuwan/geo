name: Text, Build and Upload to PyPi

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-build-and-deploy:
    runs-on: ubuntu-latest
  
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    
    - name: "Get version"
      id: get_version
      run: VERSION=$(python ./setup.py --version) && echo "::set-output name=VERSION::$VERSION" && echo "VERSION = $VERSION"    
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install build        
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        export PYTHONPATH="$PYTHONPATH:./src"
        pytest

    - name: Build package
      run: python -m build
      
    - name: Publish package to Test PyPI
      if: contains(steps.get_version.outputs.VERSION, 'rc')
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        repository_url: https://test.pypi.org/legacy/
        user: ${{ secrets.TEST_PYPI_USERNAME }}
        password: ${{ secrets.TEST_PYPI_PASSWORD }}

    - name: Publish package to PyPI
      if: contains(steps.get_version.outputs.VERSION, 'rc') == false
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: ${{ secrets.PYPI_USERNAME }}
        password: ${{ secrets.PYPI_PASSWORD }}
